Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prgm
Rule 1     name -> IDENT
Rule 2     type_ -> INT
Rule 3     type_ -> BOOL
Rule 4     expr -> name
Rule 5     expr -> TRUE
Rule 6     expr -> FALSE
Rule 7     expr -> NUMBER
Rule 8     expr -> DASH expr
Rule 9     expr -> TILD expr
Rule 10    expr -> BANG expr
Rule 11    expr -> expr PLUS expr
Rule 12    expr -> expr DASH expr
Rule 13    expr -> expr STAR expr
Rule 14    expr -> expr SLASH expr
Rule 15    expr -> expr PCENT expr
Rule 16    expr -> expr AMP expr
Rule 17    expr -> expr PIPE expr
Rule 18    expr -> expr HAT expr
Rule 19    expr -> expr LTLT expr
Rule 20    expr -> expr GTGT expr
Rule 21    expr -> expr AMPAMP expr
Rule 22    expr -> expr PIPEPIPE expr
Rule 23    expr -> expr EQEQ expr
Rule 24    expr -> expr BANGEQ expr
Rule 25    expr -> expr LT expr
Rule 26    expr -> expr LTEQ expr
Rule 27    expr -> expr GT expr
Rule 28    expr -> expr GTEQ expr
Rule 29    expr -> LPAREN expr RPAREN
Rule 30    expr -> name LPAREN exprs_comma RPAREN
Rule 31    expr -> PRINT LPAREN expr RPAREN
Rule 32    exprs_comma_1 -> expr
Rule 33    exprs_comma_1 -> exprs_comma_1 COMMA expr
Rule 34    exprs_comma -> <empty>
Rule 35    exprs_comma -> exprs_comma_1
Rule 36    stmt -> VAR name EQ expr COLON type_ SEMICOLON
Rule 37    stmt -> name EQ expr SEMICOLON
Rule 38    stmt -> expr SEMICOLON
Rule 39    stmt -> IF LPAREN expr RPAREN sblock stmt_elif
Rule 40    stmt_elif -> <empty>
Rule 41    stmt_elif -> ELSE sblock
Rule 42    stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif
Rule 43    stmt -> WHILE LPAREN expr RPAREN sblock
Rule 44    stmt -> BREAK SEMICOLON
Rule 45    stmt -> CONTINUE SEMICOLON
Rule 46    stmt -> RETURN SEMICOLON
Rule 47    stmt -> RETURN expr SEMICOLON
Rule 48    stmt -> sblock
Rule 49    stmts -> <empty>
Rule 50    stmts -> stmts stmt
Rule 51    stmts -> stmts error SEMICOLON
Rule 52    sblock -> LBRACE stmts RBRACE
Rule 53    arg -> name COLON type_
Rule 54    args_1 -> arg
Rule 55    args_1 -> args_1 COMMA arg
Rule 56    args -> args_1
Rule 57    args -> <empty>
Rule 58    rty -> <empty>
Rule 59    rty -> COLON type_
Rule 60    procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock
Rule 61    procdeclraises -> <empty>
Rule 62    procdeclraises -> RAISES raise_list
Rule 63    stmt -> RAISE name SEMICOLON
Rule 64    stmt -> TRY sblock catch catches
Rule 65    catches -> <empty>
Rule 66    catches -> catch catches
Rule 67    catch -> EXCEPT name sblock
Rule 68    raise_list -> name
Rule 69    raise_list -> name COMMA raise_list
Rule 70    exception -> EXCEPTION name SEMICOLON
Rule 71    globvardecl -> VAR name EQ expr COLON type_ SEMICOLON
Rule 72    topdecl -> procdecl
Rule 73    topdecl -> globvardecl
Rule 74    topdecl -> exception
Rule 75    prgm -> <empty>
Rule 76    prgm -> prgm topdecl

Terminals, with rules where they appear

AMP                  : 16
AMPAMP               : 21
BANG                 : 10
BANGEQ               : 24
BOOL                 : 3
BREAK                : 44
COLON                : 36 53 59 71
COMMA                : 33 55 69
CONTINUE             : 45
DASH                 : 8 12
DEF                  : 60
ELSE                 : 41 42
EQ                   : 36 37 71
EQEQ                 : 23
EXCEPT               : 67
EXCEPTION            : 70
FALSE                : 6
GT                   : 27
GTEQ                 : 28
GTGT                 : 20
HAT                  : 18
IDENT                : 1
IF                   : 39 42
INT                  : 2
LBRACE               : 52
LPAREN               : 29 30 31 39 42 43 60
LT                   : 25
LTEQ                 : 26
LTLT                 : 19
NUMBER               : 7
PCENT                : 15
PIPE                 : 17
PIPEPIPE             : 22
PLUS                 : 11
PRINT                : 31
RAISE                : 63
RAISES               : 62
RBRACE               : 52
RETURN               : 46 47
RPAREN               : 29 30 31 39 42 43 60
SEMICOLON            : 36 37 38 44 45 46 47 51 63 70 71
SLASH                : 14
STAR                 : 13
TILD                 : 9
TRUE                 : 5
TRY                  : 64
VAR                  : 36 71
WHILE                : 43
error                : 51

Nonterminals, with rules where they appear

arg                  : 54 55
args                 : 60
args_1               : 55 56
catch                : 64 66
catches              : 64 66
exception            : 74
expr                 : 8 9 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 31 32 33 36 37 38 39 42 43 47 71
exprs_comma          : 30
exprs_comma_1        : 33 35
globvardecl          : 73
name                 : 4 30 36 37 53 60 63 67 68 69 70 71
prgm                 : 76 0
procdecl             : 72
procdeclraises       : 60
raise_list           : 62 69
rty                  : 60
sblock               : 39 41 42 43 48 60 64 67
stmt                 : 50
stmt_elif            : 39 42
stmts                : 50 51 52
topdecl              : 76
type_                : 36 53 59 71


state 0

    (0) S' -> . prgm
    (75) prgm -> .
    (76) prgm -> . prgm topdecl

    DEF             reduce using rule 75 (prgm -> .)
    VAR             reduce using rule 75 (prgm -> .)
    EXCEPTION       reduce using rule 75 (prgm -> .)
    $end            reduce using rule 75 (prgm -> .)

    prgm                           shift and go to state 1

state 1

    (0) S' -> prgm .
    (76) prgm -> prgm . topdecl
    (72) topdecl -> . procdecl
    (73) topdecl -> . globvardecl
    (74) topdecl -> . exception
    (60) procdecl -> . DEF name LPAREN args RPAREN rty procdeclraises sblock
    (71) globvardecl -> . VAR name EQ expr COLON type_ SEMICOLON
    (70) exception -> . EXCEPTION name SEMICOLON

    DEF             shift and go to state 6
    VAR             shift and go to state 7
    EXCEPTION       shift and go to state 8

    topdecl                        shift and go to state 2
    procdecl                       shift and go to state 3
    globvardecl                    shift and go to state 4
    exception                      shift and go to state 5

state 2

    (76) prgm -> prgm topdecl .

    DEF             reduce using rule 76 (prgm -> prgm topdecl .)
    VAR             reduce using rule 76 (prgm -> prgm topdecl .)
    EXCEPTION       reduce using rule 76 (prgm -> prgm topdecl .)
    $end            reduce using rule 76 (prgm -> prgm topdecl .)


state 3

    (72) topdecl -> procdecl .

    DEF             reduce using rule 72 (topdecl -> procdecl .)
    VAR             reduce using rule 72 (topdecl -> procdecl .)
    EXCEPTION       reduce using rule 72 (topdecl -> procdecl .)
    $end            reduce using rule 72 (topdecl -> procdecl .)


state 4

    (73) topdecl -> globvardecl .

    DEF             reduce using rule 73 (topdecl -> globvardecl .)
    VAR             reduce using rule 73 (topdecl -> globvardecl .)
    EXCEPTION       reduce using rule 73 (topdecl -> globvardecl .)
    $end            reduce using rule 73 (topdecl -> globvardecl .)


state 5

    (74) topdecl -> exception .

    DEF             reduce using rule 74 (topdecl -> exception .)
    VAR             reduce using rule 74 (topdecl -> exception .)
    EXCEPTION       reduce using rule 74 (topdecl -> exception .)
    $end            reduce using rule 74 (topdecl -> exception .)


state 6

    (60) procdecl -> DEF . name LPAREN args RPAREN rty procdeclraises sblock
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 9

state 7

    (71) globvardecl -> VAR . name EQ expr COLON type_ SEMICOLON
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 11

state 8

    (70) exception -> EXCEPTION . name SEMICOLON
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 12

state 9

    (60) procdecl -> DEF name . LPAREN args RPAREN rty procdeclraises sblock

    LPAREN          shift and go to state 13


state 10

    (1) name -> IDENT .

    LPAREN          reduce using rule 1 (name -> IDENT .)
    EQ              reduce using rule 1 (name -> IDENT .)
    SEMICOLON       reduce using rule 1 (name -> IDENT .)
    COLON           reduce using rule 1 (name -> IDENT .)
    PLUS            reduce using rule 1 (name -> IDENT .)
    DASH            reduce using rule 1 (name -> IDENT .)
    STAR            reduce using rule 1 (name -> IDENT .)
    SLASH           reduce using rule 1 (name -> IDENT .)
    PCENT           reduce using rule 1 (name -> IDENT .)
    AMP             reduce using rule 1 (name -> IDENT .)
    PIPE            reduce using rule 1 (name -> IDENT .)
    HAT             reduce using rule 1 (name -> IDENT .)
    LTLT            reduce using rule 1 (name -> IDENT .)
    GTGT            reduce using rule 1 (name -> IDENT .)
    AMPAMP          reduce using rule 1 (name -> IDENT .)
    PIPEPIPE        reduce using rule 1 (name -> IDENT .)
    EQEQ            reduce using rule 1 (name -> IDENT .)
    BANGEQ          reduce using rule 1 (name -> IDENT .)
    LT              reduce using rule 1 (name -> IDENT .)
    LTEQ            reduce using rule 1 (name -> IDENT .)
    GT              reduce using rule 1 (name -> IDENT .)
    GTEQ            reduce using rule 1 (name -> IDENT .)
    RPAREN          reduce using rule 1 (name -> IDENT .)
    COMMA           reduce using rule 1 (name -> IDENT .)
    LBRACE          reduce using rule 1 (name -> IDENT .)


state 11

    (71) globvardecl -> VAR name . EQ expr COLON type_ SEMICOLON

    EQ              shift and go to state 14


state 12

    (70) exception -> EXCEPTION name . SEMICOLON

    SEMICOLON       shift and go to state 15


state 13

    (60) procdecl -> DEF name LPAREN . args RPAREN rty procdeclraises sblock
    (56) args -> . args_1
    (57) args -> .
    (54) args_1 -> . arg
    (55) args_1 -> . args_1 COMMA arg
    (53) arg -> . name COLON type_
    (1) name -> . IDENT

    RPAREN          reduce using rule 57 (args -> .)
    IDENT           shift and go to state 10

    name                           shift and go to state 16
    args                           shift and go to state 17
    args_1                         shift and go to state 18
    arg                            shift and go to state 19

state 14

    (71) globvardecl -> VAR name EQ . expr COLON type_ SEMICOLON
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    name                           shift and go to state 20
    expr                           shift and go to state 21

state 15

    (70) exception -> EXCEPTION name SEMICOLON .

    DEF             reduce using rule 70 (exception -> EXCEPTION name SEMICOLON .)
    VAR             reduce using rule 70 (exception -> EXCEPTION name SEMICOLON .)
    EXCEPTION       reduce using rule 70 (exception -> EXCEPTION name SEMICOLON .)
    $end            reduce using rule 70 (exception -> EXCEPTION name SEMICOLON .)


state 16

    (53) arg -> name . COLON type_

    COLON           shift and go to state 30


state 17

    (60) procdecl -> DEF name LPAREN args . RPAREN rty procdeclraises sblock

    RPAREN          shift and go to state 31


state 18

    (56) args -> args_1 .
    (55) args_1 -> args_1 . COMMA arg

    RPAREN          reduce using rule 56 (args -> args_1 .)
    COMMA           shift and go to state 32


state 19

    (54) args_1 -> arg .

    COMMA           reduce using rule 54 (args_1 -> arg .)
    RPAREN          reduce using rule 54 (args_1 -> arg .)


state 20

    (4) expr -> name .
    (30) expr -> name . LPAREN exprs_comma RPAREN

    COLON           reduce using rule 4 (expr -> name .)
    PLUS            reduce using rule 4 (expr -> name .)
    DASH            reduce using rule 4 (expr -> name .)
    STAR            reduce using rule 4 (expr -> name .)
    SLASH           reduce using rule 4 (expr -> name .)
    PCENT           reduce using rule 4 (expr -> name .)
    AMP             reduce using rule 4 (expr -> name .)
    PIPE            reduce using rule 4 (expr -> name .)
    HAT             reduce using rule 4 (expr -> name .)
    LTLT            reduce using rule 4 (expr -> name .)
    GTGT            reduce using rule 4 (expr -> name .)
    AMPAMP          reduce using rule 4 (expr -> name .)
    PIPEPIPE        reduce using rule 4 (expr -> name .)
    EQEQ            reduce using rule 4 (expr -> name .)
    BANGEQ          reduce using rule 4 (expr -> name .)
    LT              reduce using rule 4 (expr -> name .)
    LTEQ            reduce using rule 4 (expr -> name .)
    GT              reduce using rule 4 (expr -> name .)
    GTEQ            reduce using rule 4 (expr -> name .)
    RPAREN          reduce using rule 4 (expr -> name .)
    COMMA           reduce using rule 4 (expr -> name .)
    SEMICOLON       reduce using rule 4 (expr -> name .)
    LPAREN          shift and go to state 33


state 21

    (71) globvardecl -> VAR name EQ expr . COLON type_ SEMICOLON
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           shift and go to state 34
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 22

    (5) expr -> TRUE .

    COLON           reduce using rule 5 (expr -> TRUE .)
    PLUS            reduce using rule 5 (expr -> TRUE .)
    DASH            reduce using rule 5 (expr -> TRUE .)
    STAR            reduce using rule 5 (expr -> TRUE .)
    SLASH           reduce using rule 5 (expr -> TRUE .)
    PCENT           reduce using rule 5 (expr -> TRUE .)
    AMP             reduce using rule 5 (expr -> TRUE .)
    PIPE            reduce using rule 5 (expr -> TRUE .)
    HAT             reduce using rule 5 (expr -> TRUE .)
    LTLT            reduce using rule 5 (expr -> TRUE .)
    GTGT            reduce using rule 5 (expr -> TRUE .)
    AMPAMP          reduce using rule 5 (expr -> TRUE .)
    PIPEPIPE        reduce using rule 5 (expr -> TRUE .)
    EQEQ            reduce using rule 5 (expr -> TRUE .)
    BANGEQ          reduce using rule 5 (expr -> TRUE .)
    LT              reduce using rule 5 (expr -> TRUE .)
    LTEQ            reduce using rule 5 (expr -> TRUE .)
    GT              reduce using rule 5 (expr -> TRUE .)
    GTEQ            reduce using rule 5 (expr -> TRUE .)
    RPAREN          reduce using rule 5 (expr -> TRUE .)
    COMMA           reduce using rule 5 (expr -> TRUE .)
    SEMICOLON       reduce using rule 5 (expr -> TRUE .)


state 23

    (6) expr -> FALSE .

    COLON           reduce using rule 6 (expr -> FALSE .)
    PLUS            reduce using rule 6 (expr -> FALSE .)
    DASH            reduce using rule 6 (expr -> FALSE .)
    STAR            reduce using rule 6 (expr -> FALSE .)
    SLASH           reduce using rule 6 (expr -> FALSE .)
    PCENT           reduce using rule 6 (expr -> FALSE .)
    AMP             reduce using rule 6 (expr -> FALSE .)
    PIPE            reduce using rule 6 (expr -> FALSE .)
    HAT             reduce using rule 6 (expr -> FALSE .)
    LTLT            reduce using rule 6 (expr -> FALSE .)
    GTGT            reduce using rule 6 (expr -> FALSE .)
    AMPAMP          reduce using rule 6 (expr -> FALSE .)
    PIPEPIPE        reduce using rule 6 (expr -> FALSE .)
    EQEQ            reduce using rule 6 (expr -> FALSE .)
    BANGEQ          reduce using rule 6 (expr -> FALSE .)
    LT              reduce using rule 6 (expr -> FALSE .)
    LTEQ            reduce using rule 6 (expr -> FALSE .)
    GT              reduce using rule 6 (expr -> FALSE .)
    GTEQ            reduce using rule 6 (expr -> FALSE .)
    RPAREN          reduce using rule 6 (expr -> FALSE .)
    COMMA           reduce using rule 6 (expr -> FALSE .)
    SEMICOLON       reduce using rule 6 (expr -> FALSE .)


state 24

    (7) expr -> NUMBER .

    COLON           reduce using rule 7 (expr -> NUMBER .)
    PLUS            reduce using rule 7 (expr -> NUMBER .)
    DASH            reduce using rule 7 (expr -> NUMBER .)
    STAR            reduce using rule 7 (expr -> NUMBER .)
    SLASH           reduce using rule 7 (expr -> NUMBER .)
    PCENT           reduce using rule 7 (expr -> NUMBER .)
    AMP             reduce using rule 7 (expr -> NUMBER .)
    PIPE            reduce using rule 7 (expr -> NUMBER .)
    HAT             reduce using rule 7 (expr -> NUMBER .)
    LTLT            reduce using rule 7 (expr -> NUMBER .)
    GTGT            reduce using rule 7 (expr -> NUMBER .)
    AMPAMP          reduce using rule 7 (expr -> NUMBER .)
    PIPEPIPE        reduce using rule 7 (expr -> NUMBER .)
    EQEQ            reduce using rule 7 (expr -> NUMBER .)
    BANGEQ          reduce using rule 7 (expr -> NUMBER .)
    LT              reduce using rule 7 (expr -> NUMBER .)
    LTEQ            reduce using rule 7 (expr -> NUMBER .)
    GT              reduce using rule 7 (expr -> NUMBER .)
    GTEQ            reduce using rule 7 (expr -> NUMBER .)
    RPAREN          reduce using rule 7 (expr -> NUMBER .)
    COMMA           reduce using rule 7 (expr -> NUMBER .)
    SEMICOLON       reduce using rule 7 (expr -> NUMBER .)


state 25

    (8) expr -> DASH . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 53
    name                           shift and go to state 20

state 26

    (9) expr -> TILD . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 54
    name                           shift and go to state 20

state 27

    (10) expr -> BANG . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 55
    name                           shift and go to state 20

state 28

    (29) expr -> LPAREN . expr RPAREN
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 56
    name                           shift and go to state 20

state 29

    (31) expr -> PRINT . LPAREN expr RPAREN

    LPAREN          shift and go to state 57


state 30

    (53) arg -> name COLON . type_
    (2) type_ -> . INT
    (3) type_ -> . BOOL

    INT             shift and go to state 59
    BOOL            shift and go to state 60

    type_                          shift and go to state 58

state 31

    (60) procdecl -> DEF name LPAREN args RPAREN . rty procdeclraises sblock
    (58) rty -> .
    (59) rty -> . COLON type_

    RAISES          reduce using rule 58 (rty -> .)
    LBRACE          reduce using rule 58 (rty -> .)
    COLON           shift and go to state 62

    rty                            shift and go to state 61

state 32

    (55) args_1 -> args_1 COMMA . arg
    (53) arg -> . name COLON type_
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    arg                            shift and go to state 63
    name                           shift and go to state 16

state 33

    (30) expr -> name LPAREN . exprs_comma RPAREN
    (34) exprs_comma -> .
    (35) exprs_comma -> . exprs_comma_1
    (32) exprs_comma_1 -> . expr
    (33) exprs_comma_1 -> . exprs_comma_1 COMMA expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    RPAREN          reduce using rule 34 (exprs_comma -> .)
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    name                           shift and go to state 20
    exprs_comma                    shift and go to state 64
    exprs_comma_1                  shift and go to state 65
    expr                           shift and go to state 66

state 34

    (71) globvardecl -> VAR name EQ expr COLON . type_ SEMICOLON
    (2) type_ -> . INT
    (3) type_ -> . BOOL

    INT             shift and go to state 59
    BOOL            shift and go to state 60

    type_                          shift and go to state 67

state 35

    (11) expr -> expr PLUS . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 68
    name                           shift and go to state 20

state 36

    (12) expr -> expr DASH . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 69
    name                           shift and go to state 20

state 37

    (13) expr -> expr STAR . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 70
    name                           shift and go to state 20

state 38

    (14) expr -> expr SLASH . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 71
    name                           shift and go to state 20

state 39

    (15) expr -> expr PCENT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 72
    name                           shift and go to state 20

state 40

    (16) expr -> expr AMP . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 73
    name                           shift and go to state 20

state 41

    (17) expr -> expr PIPE . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 74
    name                           shift and go to state 20

state 42

    (18) expr -> expr HAT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 75
    name                           shift and go to state 20

state 43

    (19) expr -> expr LTLT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 76
    name                           shift and go to state 20

state 44

    (20) expr -> expr GTGT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 77
    name                           shift and go to state 20

state 45

    (21) expr -> expr AMPAMP . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 78
    name                           shift and go to state 20

state 46

    (22) expr -> expr PIPEPIPE . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 79
    name                           shift and go to state 20

state 47

    (23) expr -> expr EQEQ . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 80
    name                           shift and go to state 20

state 48

    (24) expr -> expr BANGEQ . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 81
    name                           shift and go to state 20

state 49

    (25) expr -> expr LT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 82
    name                           shift and go to state 20

state 50

    (26) expr -> expr LTEQ . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 83
    name                           shift and go to state 20

state 51

    (27) expr -> expr GT . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 84
    name                           shift and go to state 20

state 52

    (28) expr -> expr GTEQ . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 85
    name                           shift and go to state 20

state 53

    (8) expr -> DASH expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 8 (expr -> DASH expr .)
    PLUS            reduce using rule 8 (expr -> DASH expr .)
    DASH            reduce using rule 8 (expr -> DASH expr .)
    STAR            reduce using rule 8 (expr -> DASH expr .)
    SLASH           reduce using rule 8 (expr -> DASH expr .)
    PCENT           reduce using rule 8 (expr -> DASH expr .)
    AMP             reduce using rule 8 (expr -> DASH expr .)
    PIPE            reduce using rule 8 (expr -> DASH expr .)
    HAT             reduce using rule 8 (expr -> DASH expr .)
    LTLT            reduce using rule 8 (expr -> DASH expr .)
    GTGT            reduce using rule 8 (expr -> DASH expr .)
    AMPAMP          reduce using rule 8 (expr -> DASH expr .)
    PIPEPIPE        reduce using rule 8 (expr -> DASH expr .)
    EQEQ            reduce using rule 8 (expr -> DASH expr .)
    BANGEQ          reduce using rule 8 (expr -> DASH expr .)
    LT              reduce using rule 8 (expr -> DASH expr .)
    LTEQ            reduce using rule 8 (expr -> DASH expr .)
    GT              reduce using rule 8 (expr -> DASH expr .)
    GTEQ            reduce using rule 8 (expr -> DASH expr .)
    RPAREN          reduce using rule 8 (expr -> DASH expr .)
    COMMA           reduce using rule 8 (expr -> DASH expr .)
    SEMICOLON       reduce using rule 8 (expr -> DASH expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 54

    (9) expr -> TILD expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 9 (expr -> TILD expr .)
    PLUS            reduce using rule 9 (expr -> TILD expr .)
    DASH            reduce using rule 9 (expr -> TILD expr .)
    STAR            reduce using rule 9 (expr -> TILD expr .)
    SLASH           reduce using rule 9 (expr -> TILD expr .)
    PCENT           reduce using rule 9 (expr -> TILD expr .)
    AMP             reduce using rule 9 (expr -> TILD expr .)
    PIPE            reduce using rule 9 (expr -> TILD expr .)
    HAT             reduce using rule 9 (expr -> TILD expr .)
    LTLT            reduce using rule 9 (expr -> TILD expr .)
    GTGT            reduce using rule 9 (expr -> TILD expr .)
    AMPAMP          reduce using rule 9 (expr -> TILD expr .)
    PIPEPIPE        reduce using rule 9 (expr -> TILD expr .)
    EQEQ            reduce using rule 9 (expr -> TILD expr .)
    BANGEQ          reduce using rule 9 (expr -> TILD expr .)
    LT              reduce using rule 9 (expr -> TILD expr .)
    LTEQ            reduce using rule 9 (expr -> TILD expr .)
    GT              reduce using rule 9 (expr -> TILD expr .)
    GTEQ            reduce using rule 9 (expr -> TILD expr .)
    RPAREN          reduce using rule 9 (expr -> TILD expr .)
    COMMA           reduce using rule 9 (expr -> TILD expr .)
    SEMICOLON       reduce using rule 9 (expr -> TILD expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 55

    (10) expr -> BANG expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 10 (expr -> BANG expr .)
    PLUS            reduce using rule 10 (expr -> BANG expr .)
    DASH            reduce using rule 10 (expr -> BANG expr .)
    STAR            reduce using rule 10 (expr -> BANG expr .)
    SLASH           reduce using rule 10 (expr -> BANG expr .)
    PCENT           reduce using rule 10 (expr -> BANG expr .)
    AMP             reduce using rule 10 (expr -> BANG expr .)
    PIPE            reduce using rule 10 (expr -> BANG expr .)
    HAT             reduce using rule 10 (expr -> BANG expr .)
    LTLT            reduce using rule 10 (expr -> BANG expr .)
    GTGT            reduce using rule 10 (expr -> BANG expr .)
    AMPAMP          reduce using rule 10 (expr -> BANG expr .)
    PIPEPIPE        reduce using rule 10 (expr -> BANG expr .)
    EQEQ            reduce using rule 10 (expr -> BANG expr .)
    BANGEQ          reduce using rule 10 (expr -> BANG expr .)
    LT              reduce using rule 10 (expr -> BANG expr .)
    LTEQ            reduce using rule 10 (expr -> BANG expr .)
    GT              reduce using rule 10 (expr -> BANG expr .)
    GTEQ            reduce using rule 10 (expr -> BANG expr .)
    RPAREN          reduce using rule 10 (expr -> BANG expr .)
    COMMA           reduce using rule 10 (expr -> BANG expr .)
    SEMICOLON       reduce using rule 10 (expr -> BANG expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 56

    (29) expr -> LPAREN expr . RPAREN
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 57

    (31) expr -> PRINT LPAREN . expr RPAREN
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 87
    name                           shift and go to state 20

state 58

    (53) arg -> name COLON type_ .

    COMMA           reduce using rule 53 (arg -> name COLON type_ .)
    RPAREN          reduce using rule 53 (arg -> name COLON type_ .)


state 59

    (2) type_ -> INT .

    COMMA           reduce using rule 2 (type_ -> INT .)
    RPAREN          reduce using rule 2 (type_ -> INT .)
    SEMICOLON       reduce using rule 2 (type_ -> INT .)
    RAISES          reduce using rule 2 (type_ -> INT .)
    LBRACE          reduce using rule 2 (type_ -> INT .)


state 60

    (3) type_ -> BOOL .

    COMMA           reduce using rule 3 (type_ -> BOOL .)
    RPAREN          reduce using rule 3 (type_ -> BOOL .)
    SEMICOLON       reduce using rule 3 (type_ -> BOOL .)
    RAISES          reduce using rule 3 (type_ -> BOOL .)
    LBRACE          reduce using rule 3 (type_ -> BOOL .)


state 61

    (60) procdecl -> DEF name LPAREN args RPAREN rty . procdeclraises sblock
    (61) procdeclraises -> .
    (62) procdeclraises -> . RAISES raise_list

    LBRACE          reduce using rule 61 (procdeclraises -> .)
    RAISES          shift and go to state 89

    procdeclraises                 shift and go to state 88

state 62

    (59) rty -> COLON . type_
    (2) type_ -> . INT
    (3) type_ -> . BOOL

    INT             shift and go to state 59
    BOOL            shift and go to state 60

    type_                          shift and go to state 90

state 63

    (55) args_1 -> args_1 COMMA arg .

    COMMA           reduce using rule 55 (args_1 -> args_1 COMMA arg .)
    RPAREN          reduce using rule 55 (args_1 -> args_1 COMMA arg .)


state 64

    (30) expr -> name LPAREN exprs_comma . RPAREN

    RPAREN          shift and go to state 91


state 65

    (35) exprs_comma -> exprs_comma_1 .
    (33) exprs_comma_1 -> exprs_comma_1 . COMMA expr

    RPAREN          reduce using rule 35 (exprs_comma -> exprs_comma_1 .)
    COMMA           shift and go to state 92


state 66

    (32) exprs_comma_1 -> expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COMMA           reduce using rule 32 (exprs_comma_1 -> expr .)
    RPAREN          reduce using rule 32 (exprs_comma_1 -> expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 67

    (71) globvardecl -> VAR name EQ expr COLON type_ . SEMICOLON

    SEMICOLON       shift and go to state 93


state 68

    (11) expr -> expr PLUS expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 11 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 11 (expr -> expr PLUS expr .)
    DASH            reduce using rule 11 (expr -> expr PLUS expr .)
    AMP             reduce using rule 11 (expr -> expr PLUS expr .)
    PIPE            reduce using rule 11 (expr -> expr PLUS expr .)
    HAT             reduce using rule 11 (expr -> expr PLUS expr .)
    LTLT            reduce using rule 11 (expr -> expr PLUS expr .)
    GTGT            reduce using rule 11 (expr -> expr PLUS expr .)
    AMPAMP          reduce using rule 11 (expr -> expr PLUS expr .)
    PIPEPIPE        reduce using rule 11 (expr -> expr PLUS expr .)
    EQEQ            reduce using rule 11 (expr -> expr PLUS expr .)
    BANGEQ          reduce using rule 11 (expr -> expr PLUS expr .)
    LT              reduce using rule 11 (expr -> expr PLUS expr .)
    LTEQ            reduce using rule 11 (expr -> expr PLUS expr .)
    GT              reduce using rule 11 (expr -> expr PLUS expr .)
    GTEQ            reduce using rule 11 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 11 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 11 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 11 (expr -> expr PLUS expr .)
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39

  ! STAR            [ reduce using rule 11 (expr -> expr PLUS expr .) ]
  ! SLASH           [ reduce using rule 11 (expr -> expr PLUS expr .) ]
  ! PCENT           [ reduce using rule 11 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 69

    (12) expr -> expr DASH expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 12 (expr -> expr DASH expr .)
    PLUS            reduce using rule 12 (expr -> expr DASH expr .)
    DASH            reduce using rule 12 (expr -> expr DASH expr .)
    AMP             reduce using rule 12 (expr -> expr DASH expr .)
    PIPE            reduce using rule 12 (expr -> expr DASH expr .)
    HAT             reduce using rule 12 (expr -> expr DASH expr .)
    LTLT            reduce using rule 12 (expr -> expr DASH expr .)
    GTGT            reduce using rule 12 (expr -> expr DASH expr .)
    AMPAMP          reduce using rule 12 (expr -> expr DASH expr .)
    PIPEPIPE        reduce using rule 12 (expr -> expr DASH expr .)
    EQEQ            reduce using rule 12 (expr -> expr DASH expr .)
    BANGEQ          reduce using rule 12 (expr -> expr DASH expr .)
    LT              reduce using rule 12 (expr -> expr DASH expr .)
    LTEQ            reduce using rule 12 (expr -> expr DASH expr .)
    GT              reduce using rule 12 (expr -> expr DASH expr .)
    GTEQ            reduce using rule 12 (expr -> expr DASH expr .)
    RPAREN          reduce using rule 12 (expr -> expr DASH expr .)
    COMMA           reduce using rule 12 (expr -> expr DASH expr .)
    SEMICOLON       reduce using rule 12 (expr -> expr DASH expr .)
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39

  ! STAR            [ reduce using rule 12 (expr -> expr DASH expr .) ]
  ! SLASH           [ reduce using rule 12 (expr -> expr DASH expr .) ]
  ! PCENT           [ reduce using rule 12 (expr -> expr DASH expr .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 70

    (13) expr -> expr STAR expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 13 (expr -> expr STAR expr .)
    PLUS            reduce using rule 13 (expr -> expr STAR expr .)
    DASH            reduce using rule 13 (expr -> expr STAR expr .)
    STAR            reduce using rule 13 (expr -> expr STAR expr .)
    SLASH           reduce using rule 13 (expr -> expr STAR expr .)
    PCENT           reduce using rule 13 (expr -> expr STAR expr .)
    AMP             reduce using rule 13 (expr -> expr STAR expr .)
    PIPE            reduce using rule 13 (expr -> expr STAR expr .)
    HAT             reduce using rule 13 (expr -> expr STAR expr .)
    LTLT            reduce using rule 13 (expr -> expr STAR expr .)
    GTGT            reduce using rule 13 (expr -> expr STAR expr .)
    AMPAMP          reduce using rule 13 (expr -> expr STAR expr .)
    PIPEPIPE        reduce using rule 13 (expr -> expr STAR expr .)
    EQEQ            reduce using rule 13 (expr -> expr STAR expr .)
    BANGEQ          reduce using rule 13 (expr -> expr STAR expr .)
    LT              reduce using rule 13 (expr -> expr STAR expr .)
    LTEQ            reduce using rule 13 (expr -> expr STAR expr .)
    GT              reduce using rule 13 (expr -> expr STAR expr .)
    GTEQ            reduce using rule 13 (expr -> expr STAR expr .)
    RPAREN          reduce using rule 13 (expr -> expr STAR expr .)
    COMMA           reduce using rule 13 (expr -> expr STAR expr .)
    SEMICOLON       reduce using rule 13 (expr -> expr STAR expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 71

    (14) expr -> expr SLASH expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 14 (expr -> expr SLASH expr .)
    PLUS            reduce using rule 14 (expr -> expr SLASH expr .)
    DASH            reduce using rule 14 (expr -> expr SLASH expr .)
    STAR            reduce using rule 14 (expr -> expr SLASH expr .)
    SLASH           reduce using rule 14 (expr -> expr SLASH expr .)
    PCENT           reduce using rule 14 (expr -> expr SLASH expr .)
    AMP             reduce using rule 14 (expr -> expr SLASH expr .)
    PIPE            reduce using rule 14 (expr -> expr SLASH expr .)
    HAT             reduce using rule 14 (expr -> expr SLASH expr .)
    LTLT            reduce using rule 14 (expr -> expr SLASH expr .)
    GTGT            reduce using rule 14 (expr -> expr SLASH expr .)
    AMPAMP          reduce using rule 14 (expr -> expr SLASH expr .)
    PIPEPIPE        reduce using rule 14 (expr -> expr SLASH expr .)
    EQEQ            reduce using rule 14 (expr -> expr SLASH expr .)
    BANGEQ          reduce using rule 14 (expr -> expr SLASH expr .)
    LT              reduce using rule 14 (expr -> expr SLASH expr .)
    LTEQ            reduce using rule 14 (expr -> expr SLASH expr .)
    GT              reduce using rule 14 (expr -> expr SLASH expr .)
    GTEQ            reduce using rule 14 (expr -> expr SLASH expr .)
    RPAREN          reduce using rule 14 (expr -> expr SLASH expr .)
    COMMA           reduce using rule 14 (expr -> expr SLASH expr .)
    SEMICOLON       reduce using rule 14 (expr -> expr SLASH expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 72

    (15) expr -> expr PCENT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 15 (expr -> expr PCENT expr .)
    PLUS            reduce using rule 15 (expr -> expr PCENT expr .)
    DASH            reduce using rule 15 (expr -> expr PCENT expr .)
    STAR            reduce using rule 15 (expr -> expr PCENT expr .)
    SLASH           reduce using rule 15 (expr -> expr PCENT expr .)
    PCENT           reduce using rule 15 (expr -> expr PCENT expr .)
    AMP             reduce using rule 15 (expr -> expr PCENT expr .)
    PIPE            reduce using rule 15 (expr -> expr PCENT expr .)
    HAT             reduce using rule 15 (expr -> expr PCENT expr .)
    LTLT            reduce using rule 15 (expr -> expr PCENT expr .)
    GTGT            reduce using rule 15 (expr -> expr PCENT expr .)
    AMPAMP          reduce using rule 15 (expr -> expr PCENT expr .)
    PIPEPIPE        reduce using rule 15 (expr -> expr PCENT expr .)
    EQEQ            reduce using rule 15 (expr -> expr PCENT expr .)
    BANGEQ          reduce using rule 15 (expr -> expr PCENT expr .)
    LT              reduce using rule 15 (expr -> expr PCENT expr .)
    LTEQ            reduce using rule 15 (expr -> expr PCENT expr .)
    GT              reduce using rule 15 (expr -> expr PCENT expr .)
    GTEQ            reduce using rule 15 (expr -> expr PCENT expr .)
    RPAREN          reduce using rule 15 (expr -> expr PCENT expr .)
    COMMA           reduce using rule 15 (expr -> expr PCENT expr .)
    SEMICOLON       reduce using rule 15 (expr -> expr PCENT expr .)

  ! PLUS            [ shift and go to state 35 ]
  ! DASH            [ shift and go to state 36 ]
  ! STAR            [ shift and go to state 37 ]
  ! SLASH           [ shift and go to state 38 ]
  ! PCENT           [ shift and go to state 39 ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 73

    (16) expr -> expr AMP expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 16 (expr -> expr AMP expr .)
    AMP             reduce using rule 16 (expr -> expr AMP expr .)
    PIPE            reduce using rule 16 (expr -> expr AMP expr .)
    HAT             reduce using rule 16 (expr -> expr AMP expr .)
    AMPAMP          reduce using rule 16 (expr -> expr AMP expr .)
    PIPEPIPE        reduce using rule 16 (expr -> expr AMP expr .)
    RPAREN          reduce using rule 16 (expr -> expr AMP expr .)
    COMMA           reduce using rule 16 (expr -> expr AMP expr .)
    SEMICOLON       reduce using rule 16 (expr -> expr AMP expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! DASH            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! STAR            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! SLASH           [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! PCENT           [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! LTLT            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! GTGT            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! EQEQ            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! BANGEQ          [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! LT              [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! LTEQ            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! GT              [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! GTEQ            [ reduce using rule 16 (expr -> expr AMP expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]


state 74

    (17) expr -> expr PIPE expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 17 (expr -> expr PIPE expr .)
    PIPE            reduce using rule 17 (expr -> expr PIPE expr .)
    AMPAMP          reduce using rule 17 (expr -> expr PIPE expr .)
    PIPEPIPE        reduce using rule 17 (expr -> expr PIPE expr .)
    RPAREN          reduce using rule 17 (expr -> expr PIPE expr .)
    COMMA           reduce using rule 17 (expr -> expr PIPE expr .)
    SEMICOLON       reduce using rule 17 (expr -> expr PIPE expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! DASH            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! STAR            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! SLASH           [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! PCENT           [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! AMP             [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! HAT             [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! LTLT            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! GTGT            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! EQEQ            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! BANGEQ          [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! LT              [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! LTEQ            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! GT              [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! GTEQ            [ reduce using rule 17 (expr -> expr PIPE expr .) ]
  ! PIPE            [ shift and go to state 41 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]


state 75

    (18) expr -> expr HAT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 18 (expr -> expr HAT expr .)
    PIPE            reduce using rule 18 (expr -> expr HAT expr .)
    HAT             reduce using rule 18 (expr -> expr HAT expr .)
    AMPAMP          reduce using rule 18 (expr -> expr HAT expr .)
    PIPEPIPE        reduce using rule 18 (expr -> expr HAT expr .)
    RPAREN          reduce using rule 18 (expr -> expr HAT expr .)
    COMMA           reduce using rule 18 (expr -> expr HAT expr .)
    SEMICOLON       reduce using rule 18 (expr -> expr HAT expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! DASH            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! STAR            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! SLASH           [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! PCENT           [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! AMP             [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! LTLT            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! GTGT            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! EQEQ            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! BANGEQ          [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! LT              [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! LTEQ            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! GT              [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! GTEQ            [ reduce using rule 18 (expr -> expr HAT expr .) ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]


state 76

    (19) expr -> expr LTLT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 19 (expr -> expr LTLT expr .)
    AMP             reduce using rule 19 (expr -> expr LTLT expr .)
    PIPE            reduce using rule 19 (expr -> expr LTLT expr .)
    HAT             reduce using rule 19 (expr -> expr LTLT expr .)
    LTLT            reduce using rule 19 (expr -> expr LTLT expr .)
    GTGT            reduce using rule 19 (expr -> expr LTLT expr .)
    AMPAMP          reduce using rule 19 (expr -> expr LTLT expr .)
    PIPEPIPE        reduce using rule 19 (expr -> expr LTLT expr .)
    EQEQ            reduce using rule 19 (expr -> expr LTLT expr .)
    BANGEQ          reduce using rule 19 (expr -> expr LTLT expr .)
    LT              reduce using rule 19 (expr -> expr LTLT expr .)
    LTEQ            reduce using rule 19 (expr -> expr LTLT expr .)
    GT              reduce using rule 19 (expr -> expr LTLT expr .)
    GTEQ            reduce using rule 19 (expr -> expr LTLT expr .)
    RPAREN          reduce using rule 19 (expr -> expr LTLT expr .)
    COMMA           reduce using rule 19 (expr -> expr LTLT expr .)
    SEMICOLON       reduce using rule 19 (expr -> expr LTLT expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39

  ! PLUS            [ reduce using rule 19 (expr -> expr LTLT expr .) ]
  ! DASH            [ reduce using rule 19 (expr -> expr LTLT expr .) ]
  ! STAR            [ reduce using rule 19 (expr -> expr LTLT expr .) ]
  ! SLASH           [ reduce using rule 19 (expr -> expr LTLT expr .) ]
  ! PCENT           [ reduce using rule 19 (expr -> expr LTLT expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 77

    (20) expr -> expr GTGT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 20 (expr -> expr GTGT expr .)
    AMP             reduce using rule 20 (expr -> expr GTGT expr .)
    PIPE            reduce using rule 20 (expr -> expr GTGT expr .)
    HAT             reduce using rule 20 (expr -> expr GTGT expr .)
    LTLT            reduce using rule 20 (expr -> expr GTGT expr .)
    GTGT            reduce using rule 20 (expr -> expr GTGT expr .)
    AMPAMP          reduce using rule 20 (expr -> expr GTGT expr .)
    PIPEPIPE        reduce using rule 20 (expr -> expr GTGT expr .)
    EQEQ            reduce using rule 20 (expr -> expr GTGT expr .)
    BANGEQ          reduce using rule 20 (expr -> expr GTGT expr .)
    LT              reduce using rule 20 (expr -> expr GTGT expr .)
    LTEQ            reduce using rule 20 (expr -> expr GTGT expr .)
    GT              reduce using rule 20 (expr -> expr GTGT expr .)
    GTEQ            reduce using rule 20 (expr -> expr GTGT expr .)
    RPAREN          reduce using rule 20 (expr -> expr GTGT expr .)
    COMMA           reduce using rule 20 (expr -> expr GTGT expr .)
    SEMICOLON       reduce using rule 20 (expr -> expr GTGT expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39

  ! PLUS            [ reduce using rule 20 (expr -> expr GTGT expr .) ]
  ! DASH            [ reduce using rule 20 (expr -> expr GTGT expr .) ]
  ! STAR            [ reduce using rule 20 (expr -> expr GTGT expr .) ]
  ! SLASH           [ reduce using rule 20 (expr -> expr GTGT expr .) ]
  ! PCENT           [ reduce using rule 20 (expr -> expr GTGT expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! LTLT            [ shift and go to state 43 ]
  ! GTGT            [ shift and go to state 44 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 78

    (21) expr -> expr AMPAMP expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 21 (expr -> expr AMPAMP expr .)
    AMPAMP          reduce using rule 21 (expr -> expr AMPAMP expr .)
    PIPEPIPE        reduce using rule 21 (expr -> expr AMPAMP expr .)
    RPAREN          reduce using rule 21 (expr -> expr AMPAMP expr .)
    COMMA           reduce using rule 21 (expr -> expr AMPAMP expr .)
    SEMICOLON       reduce using rule 21 (expr -> expr AMPAMP expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! DASH            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! STAR            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! SLASH           [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! PCENT           [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! AMP             [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! PIPE            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! HAT             [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! LTLT            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! GTGT            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! EQEQ            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! BANGEQ          [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! LT              [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! LTEQ            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! GT              [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! GTEQ            [ reduce using rule 21 (expr -> expr AMPAMP expr .) ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]


state 79

    (22) expr -> expr PIPEPIPE expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 22 (expr -> expr PIPEPIPE expr .)
    PIPEPIPE        reduce using rule 22 (expr -> expr PIPEPIPE expr .)
    RPAREN          reduce using rule 22 (expr -> expr PIPEPIPE expr .)
    COMMA           reduce using rule 22 (expr -> expr PIPEPIPE expr .)
    SEMICOLON       reduce using rule 22 (expr -> expr PIPEPIPE expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! DASH            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! STAR            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! SLASH           [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! PCENT           [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! AMP             [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! PIPE            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! HAT             [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! LTLT            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! GTGT            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! AMPAMP          [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! EQEQ            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! BANGEQ          [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! LT              [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! LTEQ            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! GT              [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! GTEQ            [ reduce using rule 22 (expr -> expr PIPEPIPE expr .) ]
  ! PIPEPIPE        [ shift and go to state 46 ]


state 80

    (23) expr -> expr EQEQ expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 23 (expr -> expr EQEQ expr .)
    AMP             reduce using rule 23 (expr -> expr EQEQ expr .)
    PIPE            reduce using rule 23 (expr -> expr EQEQ expr .)
    HAT             reduce using rule 23 (expr -> expr EQEQ expr .)
    AMPAMP          reduce using rule 23 (expr -> expr EQEQ expr .)
    PIPEPIPE        reduce using rule 23 (expr -> expr EQEQ expr .)
    EQEQ            reduce using rule 23 (expr -> expr EQEQ expr .)
    BANGEQ          reduce using rule 23 (expr -> expr EQEQ expr .)
    RPAREN          reduce using rule 23 (expr -> expr EQEQ expr .)
    COMMA           reduce using rule 23 (expr -> expr EQEQ expr .)
    SEMICOLON       reduce using rule 23 (expr -> expr EQEQ expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! DASH            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! STAR            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! SLASH           [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! PCENT           [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! LTLT            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! GTGT            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! LT              [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! LTEQ            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! GT              [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! GTEQ            [ reduce using rule 23 (expr -> expr EQEQ expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]


state 81

    (24) expr -> expr BANGEQ expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 24 (expr -> expr BANGEQ expr .)
    AMP             reduce using rule 24 (expr -> expr BANGEQ expr .)
    PIPE            reduce using rule 24 (expr -> expr BANGEQ expr .)
    HAT             reduce using rule 24 (expr -> expr BANGEQ expr .)
    AMPAMP          reduce using rule 24 (expr -> expr BANGEQ expr .)
    PIPEPIPE        reduce using rule 24 (expr -> expr BANGEQ expr .)
    EQEQ            reduce using rule 24 (expr -> expr BANGEQ expr .)
    BANGEQ          reduce using rule 24 (expr -> expr BANGEQ expr .)
    RPAREN          reduce using rule 24 (expr -> expr BANGEQ expr .)
    COMMA           reduce using rule 24 (expr -> expr BANGEQ expr .)
    SEMICOLON       reduce using rule 24 (expr -> expr BANGEQ expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52

  ! PLUS            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! DASH            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! STAR            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! SLASH           [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! PCENT           [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! LTLT            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! GTGT            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! LT              [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! LTEQ            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! GT              [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! GTEQ            [ reduce using rule 24 (expr -> expr BANGEQ expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]


state 82

    (25) expr -> expr LT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 25 (expr -> expr LT expr .)
    AMP             reduce using rule 25 (expr -> expr LT expr .)
    PIPE            reduce using rule 25 (expr -> expr LT expr .)
    HAT             reduce using rule 25 (expr -> expr LT expr .)
    AMPAMP          reduce using rule 25 (expr -> expr LT expr .)
    PIPEPIPE        reduce using rule 25 (expr -> expr LT expr .)
    EQEQ            reduce using rule 25 (expr -> expr LT expr .)
    BANGEQ          reduce using rule 25 (expr -> expr LT expr .)
    LT              reduce using rule 25 (expr -> expr LT expr .)
    LTEQ            reduce using rule 25 (expr -> expr LT expr .)
    GT              reduce using rule 25 (expr -> expr LT expr .)
    GTEQ            reduce using rule 25 (expr -> expr LT expr .)
    RPAREN          reduce using rule 25 (expr -> expr LT expr .)
    COMMA           reduce using rule 25 (expr -> expr LT expr .)
    SEMICOLON       reduce using rule 25 (expr -> expr LT expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44

  ! PLUS            [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! DASH            [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! STAR            [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! SLASH           [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! PCENT           [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! LTLT            [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! GTGT            [ reduce using rule 25 (expr -> expr LT expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 83

    (26) expr -> expr LTEQ expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 26 (expr -> expr LTEQ expr .)
    AMP             reduce using rule 26 (expr -> expr LTEQ expr .)
    PIPE            reduce using rule 26 (expr -> expr LTEQ expr .)
    HAT             reduce using rule 26 (expr -> expr LTEQ expr .)
    AMPAMP          reduce using rule 26 (expr -> expr LTEQ expr .)
    PIPEPIPE        reduce using rule 26 (expr -> expr LTEQ expr .)
    EQEQ            reduce using rule 26 (expr -> expr LTEQ expr .)
    BANGEQ          reduce using rule 26 (expr -> expr LTEQ expr .)
    LT              reduce using rule 26 (expr -> expr LTEQ expr .)
    LTEQ            reduce using rule 26 (expr -> expr LTEQ expr .)
    GT              reduce using rule 26 (expr -> expr LTEQ expr .)
    GTEQ            reduce using rule 26 (expr -> expr LTEQ expr .)
    RPAREN          reduce using rule 26 (expr -> expr LTEQ expr .)
    COMMA           reduce using rule 26 (expr -> expr LTEQ expr .)
    SEMICOLON       reduce using rule 26 (expr -> expr LTEQ expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44

  ! PLUS            [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! DASH            [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! STAR            [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! SLASH           [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! PCENT           [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! LTLT            [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! GTGT            [ reduce using rule 26 (expr -> expr LTEQ expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 84

    (27) expr -> expr GT expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 27 (expr -> expr GT expr .)
    AMP             reduce using rule 27 (expr -> expr GT expr .)
    PIPE            reduce using rule 27 (expr -> expr GT expr .)
    HAT             reduce using rule 27 (expr -> expr GT expr .)
    AMPAMP          reduce using rule 27 (expr -> expr GT expr .)
    PIPEPIPE        reduce using rule 27 (expr -> expr GT expr .)
    EQEQ            reduce using rule 27 (expr -> expr GT expr .)
    BANGEQ          reduce using rule 27 (expr -> expr GT expr .)
    LT              reduce using rule 27 (expr -> expr GT expr .)
    LTEQ            reduce using rule 27 (expr -> expr GT expr .)
    GT              reduce using rule 27 (expr -> expr GT expr .)
    GTEQ            reduce using rule 27 (expr -> expr GT expr .)
    RPAREN          reduce using rule 27 (expr -> expr GT expr .)
    COMMA           reduce using rule 27 (expr -> expr GT expr .)
    SEMICOLON       reduce using rule 27 (expr -> expr GT expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44

  ! PLUS            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! DASH            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! STAR            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! SLASH           [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! PCENT           [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! LTLT            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! GTGT            [ reduce using rule 27 (expr -> expr GT expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 85

    (28) expr -> expr GTEQ expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           reduce using rule 28 (expr -> expr GTEQ expr .)
    AMP             reduce using rule 28 (expr -> expr GTEQ expr .)
    PIPE            reduce using rule 28 (expr -> expr GTEQ expr .)
    HAT             reduce using rule 28 (expr -> expr GTEQ expr .)
    AMPAMP          reduce using rule 28 (expr -> expr GTEQ expr .)
    PIPEPIPE        reduce using rule 28 (expr -> expr GTEQ expr .)
    EQEQ            reduce using rule 28 (expr -> expr GTEQ expr .)
    BANGEQ          reduce using rule 28 (expr -> expr GTEQ expr .)
    LT              reduce using rule 28 (expr -> expr GTEQ expr .)
    LTEQ            reduce using rule 28 (expr -> expr GTEQ expr .)
    GT              reduce using rule 28 (expr -> expr GTEQ expr .)
    GTEQ            reduce using rule 28 (expr -> expr GTEQ expr .)
    RPAREN          reduce using rule 28 (expr -> expr GTEQ expr .)
    COMMA           reduce using rule 28 (expr -> expr GTEQ expr .)
    SEMICOLON       reduce using rule 28 (expr -> expr GTEQ expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44

  ! PLUS            [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! DASH            [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! STAR            [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! SLASH           [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! PCENT           [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! LTLT            [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! GTGT            [ reduce using rule 28 (expr -> expr GTEQ expr .) ]
  ! AMP             [ shift and go to state 40 ]
  ! PIPE            [ shift and go to state 41 ]
  ! HAT             [ shift and go to state 42 ]
  ! AMPAMP          [ shift and go to state 45 ]
  ! PIPEPIPE        [ shift and go to state 46 ]
  ! EQEQ            [ shift and go to state 47 ]
  ! BANGEQ          [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LTEQ            [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GTEQ            [ shift and go to state 52 ]


state 86

    (29) expr -> LPAREN expr RPAREN .

    COLON           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    DASH            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    STAR            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    SLASH           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PCENT           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    AMP             reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PIPE            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    HAT             reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    LTLT            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    GTGT            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    AMPAMP          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PIPEPIPE        reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    EQEQ            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    BANGEQ          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    LTEQ            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    GTEQ            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 29 (expr -> LPAREN expr RPAREN .)


state 87

    (31) expr -> PRINT LPAREN expr . RPAREN
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 88

    (60) procdecl -> DEF name LPAREN args RPAREN rty procdeclraises . sblock
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 95

state 89

    (62) procdeclraises -> RAISES . raise_list
    (68) raise_list -> . name
    (69) raise_list -> . name COMMA raise_list
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    raise_list                     shift and go to state 97
    name                           shift and go to state 98

state 90

    (59) rty -> COLON type_ .

    RAISES          reduce using rule 59 (rty -> COLON type_ .)
    LBRACE          reduce using rule 59 (rty -> COLON type_ .)


state 91

    (30) expr -> name LPAREN exprs_comma RPAREN .

    COLON           reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    PLUS            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    DASH            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    STAR            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    SLASH           reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    PCENT           reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    AMP             reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    PIPE            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    HAT             reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    LTLT            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    GTGT            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    AMPAMP          reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    PIPEPIPE        reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    EQEQ            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    BANGEQ          reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    LT              reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    LTEQ            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    GT              reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    GTEQ            reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    RPAREN          reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    COMMA           reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)
    SEMICOLON       reduce using rule 30 (expr -> name LPAREN exprs_comma RPAREN .)


state 92

    (33) exprs_comma_1 -> exprs_comma_1 COMMA . expr
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 99
    name                           shift and go to state 20

state 93

    (71) globvardecl -> VAR name EQ expr COLON type_ SEMICOLON .

    DEF             reduce using rule 71 (globvardecl -> VAR name EQ expr COLON type_ SEMICOLON .)
    VAR             reduce using rule 71 (globvardecl -> VAR name EQ expr COLON type_ SEMICOLON .)
    EXCEPTION       reduce using rule 71 (globvardecl -> VAR name EQ expr COLON type_ SEMICOLON .)
    $end            reduce using rule 71 (globvardecl -> VAR name EQ expr COLON type_ SEMICOLON .)


state 94

    (31) expr -> PRINT LPAREN expr RPAREN .

    COLON           reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    DASH            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    STAR            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    SLASH           reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    PCENT           reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    AMP             reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    PIPE            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    HAT             reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    LTLT            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    GTGT            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    AMPAMP          reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    PIPEPIPE        reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    EQEQ            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    BANGEQ          reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    LT              reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    LTEQ            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    GT              reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    GTEQ            reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 31 (expr -> PRINT LPAREN expr RPAREN .)


state 95

    (60) procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock .

    DEF             reduce using rule 60 (procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock .)
    VAR             reduce using rule 60 (procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock .)
    EXCEPTION       reduce using rule 60 (procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock .)
    $end            reduce using rule 60 (procdecl -> DEF name LPAREN args RPAREN rty procdeclraises sblock .)


state 96

    (52) sblock -> LBRACE . stmts RBRACE
    (49) stmts -> .
    (50) stmts -> . stmts stmt
    (51) stmts -> . stmts error SEMICOLON

    RBRACE          reduce using rule 49 (stmts -> .)
    error           reduce using rule 49 (stmts -> .)
    VAR             reduce using rule 49 (stmts -> .)
    IF              reduce using rule 49 (stmts -> .)
    WHILE           reduce using rule 49 (stmts -> .)
    BREAK           reduce using rule 49 (stmts -> .)
    CONTINUE        reduce using rule 49 (stmts -> .)
    RETURN          reduce using rule 49 (stmts -> .)
    RAISE           reduce using rule 49 (stmts -> .)
    TRY             reduce using rule 49 (stmts -> .)
    IDENT           reduce using rule 49 (stmts -> .)
    TRUE            reduce using rule 49 (stmts -> .)
    FALSE           reduce using rule 49 (stmts -> .)
    NUMBER          reduce using rule 49 (stmts -> .)
    DASH            reduce using rule 49 (stmts -> .)
    TILD            reduce using rule 49 (stmts -> .)
    BANG            reduce using rule 49 (stmts -> .)
    LPAREN          reduce using rule 49 (stmts -> .)
    PRINT           reduce using rule 49 (stmts -> .)
    LBRACE          reduce using rule 49 (stmts -> .)

    stmts                          shift and go to state 100

state 97

    (62) procdeclraises -> RAISES raise_list .

    LBRACE          reduce using rule 62 (procdeclraises -> RAISES raise_list .)


state 98

    (68) raise_list -> name .
    (69) raise_list -> name . COMMA raise_list

    LBRACE          reduce using rule 68 (raise_list -> name .)
    COMMA           shift and go to state 101


state 99

    (33) exprs_comma_1 -> exprs_comma_1 COMMA expr .
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COMMA           reduce using rule 33 (exprs_comma_1 -> exprs_comma_1 COMMA expr .)
    RPAREN          reduce using rule 33 (exprs_comma_1 -> exprs_comma_1 COMMA expr .)
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 100

    (52) sblock -> LBRACE stmts . RBRACE
    (50) stmts -> stmts . stmt
    (51) stmts -> stmts . error SEMICOLON
    (36) stmt -> . VAR name EQ expr COLON type_ SEMICOLON
    (37) stmt -> . name EQ expr SEMICOLON
    (38) stmt -> . expr SEMICOLON
    (39) stmt -> . IF LPAREN expr RPAREN sblock stmt_elif
    (43) stmt -> . WHILE LPAREN expr RPAREN sblock
    (44) stmt -> . BREAK SEMICOLON
    (45) stmt -> . CONTINUE SEMICOLON
    (46) stmt -> . RETURN SEMICOLON
    (47) stmt -> . RETURN expr SEMICOLON
    (48) stmt -> . sblock
    (63) stmt -> . RAISE name SEMICOLON
    (64) stmt -> . TRY sblock catch catches
    (1) name -> . IDENT
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (52) sblock -> . LBRACE stmts RBRACE

    RBRACE          shift and go to state 102
    error           shift and go to state 104
    VAR             shift and go to state 105
    IF              shift and go to state 108
    WHILE           shift and go to state 110
    BREAK           shift and go to state 111
    CONTINUE        shift and go to state 112
    RETURN          shift and go to state 113
    RAISE           shift and go to state 114
    TRY             shift and go to state 115
    IDENT           shift and go to state 10
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    LBRACE          shift and go to state 96

    stmt                           shift and go to state 103
    name                           shift and go to state 106
    expr                           shift and go to state 107
    sblock                         shift and go to state 109

state 101

    (69) raise_list -> name COMMA . raise_list
    (68) raise_list -> . name
    (69) raise_list -> . name COMMA raise_list
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 98
    raise_list                     shift and go to state 116

state 102

    (52) sblock -> LBRACE stmts RBRACE .

    DEF             reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    VAR             reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    EXCEPTION       reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    $end            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    RBRACE          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    error           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    IF              reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    WHILE           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    BREAK           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    CONTINUE        reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    RETURN          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    RAISE           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    TRY             reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    IDENT           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    TRUE            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    FALSE           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    NUMBER          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    DASH            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    TILD            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    BANG            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    LPAREN          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    PRINT           reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    LBRACE          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    EXCEPT          reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)
    ELSE            reduce using rule 52 (sblock -> LBRACE stmts RBRACE .)


state 103

    (50) stmts -> stmts stmt .

    RBRACE          reduce using rule 50 (stmts -> stmts stmt .)
    error           reduce using rule 50 (stmts -> stmts stmt .)
    VAR             reduce using rule 50 (stmts -> stmts stmt .)
    IF              reduce using rule 50 (stmts -> stmts stmt .)
    WHILE           reduce using rule 50 (stmts -> stmts stmt .)
    BREAK           reduce using rule 50 (stmts -> stmts stmt .)
    CONTINUE        reduce using rule 50 (stmts -> stmts stmt .)
    RETURN          reduce using rule 50 (stmts -> stmts stmt .)
    RAISE           reduce using rule 50 (stmts -> stmts stmt .)
    TRY             reduce using rule 50 (stmts -> stmts stmt .)
    IDENT           reduce using rule 50 (stmts -> stmts stmt .)
    TRUE            reduce using rule 50 (stmts -> stmts stmt .)
    FALSE           reduce using rule 50 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 50 (stmts -> stmts stmt .)
    DASH            reduce using rule 50 (stmts -> stmts stmt .)
    TILD            reduce using rule 50 (stmts -> stmts stmt .)
    BANG            reduce using rule 50 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 50 (stmts -> stmts stmt .)
    PRINT           reduce using rule 50 (stmts -> stmts stmt .)
    LBRACE          reduce using rule 50 (stmts -> stmts stmt .)


state 104

    (51) stmts -> stmts error . SEMICOLON

    SEMICOLON       shift and go to state 117


state 105

    (36) stmt -> VAR . name EQ expr COLON type_ SEMICOLON
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 118

state 106

    (37) stmt -> name . EQ expr SEMICOLON
    (4) expr -> name .
    (30) expr -> name . LPAREN exprs_comma RPAREN

    EQ              shift and go to state 119
    SEMICOLON       reduce using rule 4 (expr -> name .)
    PLUS            reduce using rule 4 (expr -> name .)
    DASH            reduce using rule 4 (expr -> name .)
    STAR            reduce using rule 4 (expr -> name .)
    SLASH           reduce using rule 4 (expr -> name .)
    PCENT           reduce using rule 4 (expr -> name .)
    AMP             reduce using rule 4 (expr -> name .)
    PIPE            reduce using rule 4 (expr -> name .)
    HAT             reduce using rule 4 (expr -> name .)
    LTLT            reduce using rule 4 (expr -> name .)
    GTGT            reduce using rule 4 (expr -> name .)
    AMPAMP          reduce using rule 4 (expr -> name .)
    PIPEPIPE        reduce using rule 4 (expr -> name .)
    EQEQ            reduce using rule 4 (expr -> name .)
    BANGEQ          reduce using rule 4 (expr -> name .)
    LT              reduce using rule 4 (expr -> name .)
    LTEQ            reduce using rule 4 (expr -> name .)
    GT              reduce using rule 4 (expr -> name .)
    GTEQ            reduce using rule 4 (expr -> name .)
    LPAREN          shift and go to state 33


state 107

    (38) stmt -> expr . SEMICOLON
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    SEMICOLON       shift and go to state 120
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 108

    (39) stmt -> IF . LPAREN expr RPAREN sblock stmt_elif

    LPAREN          shift and go to state 121


state 109

    (48) stmt -> sblock .

    RBRACE          reduce using rule 48 (stmt -> sblock .)
    error           reduce using rule 48 (stmt -> sblock .)
    VAR             reduce using rule 48 (stmt -> sblock .)
    IF              reduce using rule 48 (stmt -> sblock .)
    WHILE           reduce using rule 48 (stmt -> sblock .)
    BREAK           reduce using rule 48 (stmt -> sblock .)
    CONTINUE        reduce using rule 48 (stmt -> sblock .)
    RETURN          reduce using rule 48 (stmt -> sblock .)
    RAISE           reduce using rule 48 (stmt -> sblock .)
    TRY             reduce using rule 48 (stmt -> sblock .)
    IDENT           reduce using rule 48 (stmt -> sblock .)
    TRUE            reduce using rule 48 (stmt -> sblock .)
    FALSE           reduce using rule 48 (stmt -> sblock .)
    NUMBER          reduce using rule 48 (stmt -> sblock .)
    DASH            reduce using rule 48 (stmt -> sblock .)
    TILD            reduce using rule 48 (stmt -> sblock .)
    BANG            reduce using rule 48 (stmt -> sblock .)
    LPAREN          reduce using rule 48 (stmt -> sblock .)
    PRINT           reduce using rule 48 (stmt -> sblock .)
    LBRACE          reduce using rule 48 (stmt -> sblock .)


state 110

    (43) stmt -> WHILE . LPAREN expr RPAREN sblock

    LPAREN          shift and go to state 122


state 111

    (44) stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 123


state 112

    (45) stmt -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 124


state 113

    (46) stmt -> RETURN . SEMICOLON
    (47) stmt -> RETURN . expr SEMICOLON
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    SEMICOLON       shift and go to state 125
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 126
    name                           shift and go to state 20

state 114

    (63) stmt -> RAISE . name SEMICOLON
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 127

state 115

    (64) stmt -> TRY . sblock catch catches
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 128

state 116

    (69) raise_list -> name COMMA raise_list .

    LBRACE          reduce using rule 69 (raise_list -> name COMMA raise_list .)


state 117

    (51) stmts -> stmts error SEMICOLON .

    RBRACE          reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    error           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    VAR             reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    IF              reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    WHILE           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    BREAK           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    CONTINUE        reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    RETURN          reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    RAISE           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    TRY             reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    IDENT           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    TRUE            reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    FALSE           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    NUMBER          reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    DASH            reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    TILD            reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    BANG            reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    LPAREN          reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    PRINT           reduce using rule 51 (stmts -> stmts error SEMICOLON .)
    LBRACE          reduce using rule 51 (stmts -> stmts error SEMICOLON .)


state 118

    (36) stmt -> VAR name . EQ expr COLON type_ SEMICOLON

    EQ              shift and go to state 129


state 119

    (37) stmt -> name EQ . expr SEMICOLON
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    name                           shift and go to state 20
    expr                           shift and go to state 130

state 120

    (38) stmt -> expr SEMICOLON .

    RBRACE          reduce using rule 38 (stmt -> expr SEMICOLON .)
    error           reduce using rule 38 (stmt -> expr SEMICOLON .)
    VAR             reduce using rule 38 (stmt -> expr SEMICOLON .)
    IF              reduce using rule 38 (stmt -> expr SEMICOLON .)
    WHILE           reduce using rule 38 (stmt -> expr SEMICOLON .)
    BREAK           reduce using rule 38 (stmt -> expr SEMICOLON .)
    CONTINUE        reduce using rule 38 (stmt -> expr SEMICOLON .)
    RETURN          reduce using rule 38 (stmt -> expr SEMICOLON .)
    RAISE           reduce using rule 38 (stmt -> expr SEMICOLON .)
    TRY             reduce using rule 38 (stmt -> expr SEMICOLON .)
    IDENT           reduce using rule 38 (stmt -> expr SEMICOLON .)
    TRUE            reduce using rule 38 (stmt -> expr SEMICOLON .)
    FALSE           reduce using rule 38 (stmt -> expr SEMICOLON .)
    NUMBER          reduce using rule 38 (stmt -> expr SEMICOLON .)
    DASH            reduce using rule 38 (stmt -> expr SEMICOLON .)
    TILD            reduce using rule 38 (stmt -> expr SEMICOLON .)
    BANG            reduce using rule 38 (stmt -> expr SEMICOLON .)
    LPAREN          reduce using rule 38 (stmt -> expr SEMICOLON .)
    PRINT           reduce using rule 38 (stmt -> expr SEMICOLON .)
    LBRACE          reduce using rule 38 (stmt -> expr SEMICOLON .)


state 121

    (39) stmt -> IF LPAREN . expr RPAREN sblock stmt_elif
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 131
    name                           shift and go to state 20

state 122

    (43) stmt -> WHILE LPAREN . expr RPAREN sblock
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 132
    name                           shift and go to state 20

state 123

    (44) stmt -> BREAK SEMICOLON .

    RBRACE          reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    error           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    VAR             reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    BREAK           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    RETURN          reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    RAISE           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    TRY             reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    IDENT           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    TRUE            reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    FALSE           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    DASH            reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    TILD            reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    BANG            reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    PRINT           reduce using rule 44 (stmt -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 44 (stmt -> BREAK SEMICOLON .)


state 124

    (45) stmt -> CONTINUE SEMICOLON .

    RBRACE          reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    error           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    VAR             reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    IF              reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    RAISE           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    TRY             reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    IDENT           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    TRUE            reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    FALSE           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    NUMBER          reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    DASH            reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    TILD            reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    BANG            reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)
    LBRACE          reduce using rule 45 (stmt -> CONTINUE SEMICOLON .)


state 125

    (46) stmt -> RETURN SEMICOLON .

    RBRACE          reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    error           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    VAR             reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    IF              reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    WHILE           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    BREAK           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    RETURN          reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    RAISE           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    TRY             reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    IDENT           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    TRUE            reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    FALSE           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    DASH            reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    TILD            reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    BANG            reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    PRINT           reduce using rule 46 (stmt -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 46 (stmt -> RETURN SEMICOLON .)


state 126

    (47) stmt -> RETURN expr . SEMICOLON
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    SEMICOLON       shift and go to state 133
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 127

    (63) stmt -> RAISE name . SEMICOLON

    SEMICOLON       shift and go to state 134


state 128

    (64) stmt -> TRY sblock . catch catches
    (67) catch -> . EXCEPT name sblock

    EXCEPT          shift and go to state 136

    catch                          shift and go to state 135

state 129

    (36) stmt -> VAR name EQ . expr COLON type_ SEMICOLON
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    name                           shift and go to state 20
    expr                           shift and go to state 137

state 130

    (37) stmt -> name EQ expr . SEMICOLON
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    SEMICOLON       shift and go to state 138
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 131

    (39) stmt -> IF LPAREN expr . RPAREN sblock stmt_elif
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    RPAREN          shift and go to state 139
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 132

    (43) stmt -> WHILE LPAREN expr . RPAREN sblock
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    RPAREN          shift and go to state 140
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 133

    (47) stmt -> RETURN expr SEMICOLON .

    RBRACE          reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    error           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    IF              reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    BREAK           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    CONTINUE        reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    RAISE           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    TRY             reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    IDENT           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    TRUE            reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    FALSE           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    NUMBER          reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    DASH            reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    TILD            reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    BANG            reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    PRINT           reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)
    LBRACE          reduce using rule 47 (stmt -> RETURN expr SEMICOLON .)


state 134

    (63) stmt -> RAISE name SEMICOLON .

    RBRACE          reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    error           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    VAR             reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    IF              reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    WHILE           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    BREAK           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    CONTINUE        reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    RETURN          reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    RAISE           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    TRY             reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    IDENT           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    TRUE            reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    FALSE           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    NUMBER          reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    DASH            reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    TILD            reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    BANG            reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    LPAREN          reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    PRINT           reduce using rule 63 (stmt -> RAISE name SEMICOLON .)
    LBRACE          reduce using rule 63 (stmt -> RAISE name SEMICOLON .)


state 135

    (64) stmt -> TRY sblock catch . catches
    (65) catches -> .
    (66) catches -> . catch catches
    (67) catch -> . EXCEPT name sblock

    RBRACE          reduce using rule 65 (catches -> .)
    error           reduce using rule 65 (catches -> .)
    VAR             reduce using rule 65 (catches -> .)
    IF              reduce using rule 65 (catches -> .)
    WHILE           reduce using rule 65 (catches -> .)
    BREAK           reduce using rule 65 (catches -> .)
    CONTINUE        reduce using rule 65 (catches -> .)
    RETURN          reduce using rule 65 (catches -> .)
    RAISE           reduce using rule 65 (catches -> .)
    TRY             reduce using rule 65 (catches -> .)
    IDENT           reduce using rule 65 (catches -> .)
    TRUE            reduce using rule 65 (catches -> .)
    FALSE           reduce using rule 65 (catches -> .)
    NUMBER          reduce using rule 65 (catches -> .)
    DASH            reduce using rule 65 (catches -> .)
    TILD            reduce using rule 65 (catches -> .)
    BANG            reduce using rule 65 (catches -> .)
    LPAREN          reduce using rule 65 (catches -> .)
    PRINT           reduce using rule 65 (catches -> .)
    LBRACE          reduce using rule 65 (catches -> .)
    EXCEPT          shift and go to state 136

    catch                          shift and go to state 141
    catches                        shift and go to state 142

state 136

    (67) catch -> EXCEPT . name sblock
    (1) name -> . IDENT

    IDENT           shift and go to state 10

    name                           shift and go to state 143

state 137

    (36) stmt -> VAR name EQ expr . COLON type_ SEMICOLON
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    COLON           shift and go to state 144
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 138

    (37) stmt -> name EQ expr SEMICOLON .

    RBRACE          reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    error           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    VAR             reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    IF              reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    WHILE           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    BREAK           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    CONTINUE        reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    RETURN          reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    RAISE           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    TRY             reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    IDENT           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    TRUE            reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    FALSE           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    NUMBER          reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    DASH            reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    TILD            reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    BANG            reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    LPAREN          reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    PRINT           reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)
    LBRACE          reduce using rule 37 (stmt -> name EQ expr SEMICOLON .)


state 139

    (39) stmt -> IF LPAREN expr RPAREN . sblock stmt_elif
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 145

state 140

    (43) stmt -> WHILE LPAREN expr RPAREN . sblock
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 146

state 141

    (66) catches -> catch . catches
    (65) catches -> .
    (66) catches -> . catch catches
    (67) catch -> . EXCEPT name sblock

    RBRACE          reduce using rule 65 (catches -> .)
    error           reduce using rule 65 (catches -> .)
    VAR             reduce using rule 65 (catches -> .)
    IF              reduce using rule 65 (catches -> .)
    WHILE           reduce using rule 65 (catches -> .)
    BREAK           reduce using rule 65 (catches -> .)
    CONTINUE        reduce using rule 65 (catches -> .)
    RETURN          reduce using rule 65 (catches -> .)
    RAISE           reduce using rule 65 (catches -> .)
    TRY             reduce using rule 65 (catches -> .)
    IDENT           reduce using rule 65 (catches -> .)
    TRUE            reduce using rule 65 (catches -> .)
    FALSE           reduce using rule 65 (catches -> .)
    NUMBER          reduce using rule 65 (catches -> .)
    DASH            reduce using rule 65 (catches -> .)
    TILD            reduce using rule 65 (catches -> .)
    BANG            reduce using rule 65 (catches -> .)
    LPAREN          reduce using rule 65 (catches -> .)
    PRINT           reduce using rule 65 (catches -> .)
    LBRACE          reduce using rule 65 (catches -> .)
    EXCEPT          shift and go to state 136

    catch                          shift and go to state 141
    catches                        shift and go to state 147

state 142

    (64) stmt -> TRY sblock catch catches .

    RBRACE          reduce using rule 64 (stmt -> TRY sblock catch catches .)
    error           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    VAR             reduce using rule 64 (stmt -> TRY sblock catch catches .)
    IF              reduce using rule 64 (stmt -> TRY sblock catch catches .)
    WHILE           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    BREAK           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    CONTINUE        reduce using rule 64 (stmt -> TRY sblock catch catches .)
    RETURN          reduce using rule 64 (stmt -> TRY sblock catch catches .)
    RAISE           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    TRY             reduce using rule 64 (stmt -> TRY sblock catch catches .)
    IDENT           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    TRUE            reduce using rule 64 (stmt -> TRY sblock catch catches .)
    FALSE           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    NUMBER          reduce using rule 64 (stmt -> TRY sblock catch catches .)
    DASH            reduce using rule 64 (stmt -> TRY sblock catch catches .)
    TILD            reduce using rule 64 (stmt -> TRY sblock catch catches .)
    BANG            reduce using rule 64 (stmt -> TRY sblock catch catches .)
    LPAREN          reduce using rule 64 (stmt -> TRY sblock catch catches .)
    PRINT           reduce using rule 64 (stmt -> TRY sblock catch catches .)
    LBRACE          reduce using rule 64 (stmt -> TRY sblock catch catches .)


state 143

    (67) catch -> EXCEPT name . sblock
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 148

state 144

    (36) stmt -> VAR name EQ expr COLON . type_ SEMICOLON
    (2) type_ -> . INT
    (3) type_ -> . BOOL

    INT             shift and go to state 59
    BOOL            shift and go to state 60

    type_                          shift and go to state 149

state 145

    (39) stmt -> IF LPAREN expr RPAREN sblock . stmt_elif
    (40) stmt_elif -> .
    (41) stmt_elif -> . ELSE sblock
    (42) stmt_elif -> . ELSE IF LPAREN expr RPAREN sblock stmt_elif

    RBRACE          reduce using rule 40 (stmt_elif -> .)
    error           reduce using rule 40 (stmt_elif -> .)
    VAR             reduce using rule 40 (stmt_elif -> .)
    IF              reduce using rule 40 (stmt_elif -> .)
    WHILE           reduce using rule 40 (stmt_elif -> .)
    BREAK           reduce using rule 40 (stmt_elif -> .)
    CONTINUE        reduce using rule 40 (stmt_elif -> .)
    RETURN          reduce using rule 40 (stmt_elif -> .)
    RAISE           reduce using rule 40 (stmt_elif -> .)
    TRY             reduce using rule 40 (stmt_elif -> .)
    IDENT           reduce using rule 40 (stmt_elif -> .)
    TRUE            reduce using rule 40 (stmt_elif -> .)
    FALSE           reduce using rule 40 (stmt_elif -> .)
    NUMBER          reduce using rule 40 (stmt_elif -> .)
    DASH            reduce using rule 40 (stmt_elif -> .)
    TILD            reduce using rule 40 (stmt_elif -> .)
    BANG            reduce using rule 40 (stmt_elif -> .)
    LPAREN          reduce using rule 40 (stmt_elif -> .)
    PRINT           reduce using rule 40 (stmt_elif -> .)
    LBRACE          reduce using rule 40 (stmt_elif -> .)
    ELSE            shift and go to state 151

    stmt_elif                      shift and go to state 150

state 146

    (43) stmt -> WHILE LPAREN expr RPAREN sblock .

    RBRACE          reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    error           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    VAR             reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    IF              reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    WHILE           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    BREAK           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    CONTINUE        reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    RETURN          reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    RAISE           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    TRY             reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    IDENT           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    TRUE            reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    FALSE           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    NUMBER          reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    DASH            reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    TILD            reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    BANG            reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    LPAREN          reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    PRINT           reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)
    LBRACE          reduce using rule 43 (stmt -> WHILE LPAREN expr RPAREN sblock .)


state 147

    (66) catches -> catch catches .

    RBRACE          reduce using rule 66 (catches -> catch catches .)
    error           reduce using rule 66 (catches -> catch catches .)
    VAR             reduce using rule 66 (catches -> catch catches .)
    IF              reduce using rule 66 (catches -> catch catches .)
    WHILE           reduce using rule 66 (catches -> catch catches .)
    BREAK           reduce using rule 66 (catches -> catch catches .)
    CONTINUE        reduce using rule 66 (catches -> catch catches .)
    RETURN          reduce using rule 66 (catches -> catch catches .)
    RAISE           reduce using rule 66 (catches -> catch catches .)
    TRY             reduce using rule 66 (catches -> catch catches .)
    IDENT           reduce using rule 66 (catches -> catch catches .)
    TRUE            reduce using rule 66 (catches -> catch catches .)
    FALSE           reduce using rule 66 (catches -> catch catches .)
    NUMBER          reduce using rule 66 (catches -> catch catches .)
    DASH            reduce using rule 66 (catches -> catch catches .)
    TILD            reduce using rule 66 (catches -> catch catches .)
    BANG            reduce using rule 66 (catches -> catch catches .)
    LPAREN          reduce using rule 66 (catches -> catch catches .)
    PRINT           reduce using rule 66 (catches -> catch catches .)
    LBRACE          reduce using rule 66 (catches -> catch catches .)


state 148

    (67) catch -> EXCEPT name sblock .

    EXCEPT          reduce using rule 67 (catch -> EXCEPT name sblock .)
    RBRACE          reduce using rule 67 (catch -> EXCEPT name sblock .)
    error           reduce using rule 67 (catch -> EXCEPT name sblock .)
    VAR             reduce using rule 67 (catch -> EXCEPT name sblock .)
    IF              reduce using rule 67 (catch -> EXCEPT name sblock .)
    WHILE           reduce using rule 67 (catch -> EXCEPT name sblock .)
    BREAK           reduce using rule 67 (catch -> EXCEPT name sblock .)
    CONTINUE        reduce using rule 67 (catch -> EXCEPT name sblock .)
    RETURN          reduce using rule 67 (catch -> EXCEPT name sblock .)
    RAISE           reduce using rule 67 (catch -> EXCEPT name sblock .)
    TRY             reduce using rule 67 (catch -> EXCEPT name sblock .)
    IDENT           reduce using rule 67 (catch -> EXCEPT name sblock .)
    TRUE            reduce using rule 67 (catch -> EXCEPT name sblock .)
    FALSE           reduce using rule 67 (catch -> EXCEPT name sblock .)
    NUMBER          reduce using rule 67 (catch -> EXCEPT name sblock .)
    DASH            reduce using rule 67 (catch -> EXCEPT name sblock .)
    TILD            reduce using rule 67 (catch -> EXCEPT name sblock .)
    BANG            reduce using rule 67 (catch -> EXCEPT name sblock .)
    LPAREN          reduce using rule 67 (catch -> EXCEPT name sblock .)
    PRINT           reduce using rule 67 (catch -> EXCEPT name sblock .)
    LBRACE          reduce using rule 67 (catch -> EXCEPT name sblock .)


state 149

    (36) stmt -> VAR name EQ expr COLON type_ . SEMICOLON

    SEMICOLON       shift and go to state 152


state 150

    (39) stmt -> IF LPAREN expr RPAREN sblock stmt_elif .

    RBRACE          reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    error           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    VAR             reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    IF              reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    WHILE           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    BREAK           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    CONTINUE        reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    RETURN          reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    RAISE           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    TRY             reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    IDENT           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    TRUE            reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    FALSE           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    NUMBER          reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    DASH            reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    TILD            reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    BANG            reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    LPAREN          reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    PRINT           reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)
    LBRACE          reduce using rule 39 (stmt -> IF LPAREN expr RPAREN sblock stmt_elif .)


state 151

    (41) stmt_elif -> ELSE . sblock
    (42) stmt_elif -> ELSE . IF LPAREN expr RPAREN sblock stmt_elif
    (52) sblock -> . LBRACE stmts RBRACE

    IF              shift and go to state 154
    LBRACE          shift and go to state 96

    sblock                         shift and go to state 153

state 152

    (36) stmt -> VAR name EQ expr COLON type_ SEMICOLON .

    RBRACE          reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    error           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    VAR             reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    IF              reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    WHILE           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    BREAK           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    CONTINUE        reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    RETURN          reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    RAISE           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    TRY             reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    IDENT           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    TRUE            reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    FALSE           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    NUMBER          reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    DASH            reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    TILD            reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    BANG            reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    LPAREN          reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    PRINT           reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)
    LBRACE          reduce using rule 36 (stmt -> VAR name EQ expr COLON type_ SEMICOLON .)


state 153

    (41) stmt_elif -> ELSE sblock .

    RBRACE          reduce using rule 41 (stmt_elif -> ELSE sblock .)
    error           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    VAR             reduce using rule 41 (stmt_elif -> ELSE sblock .)
    IF              reduce using rule 41 (stmt_elif -> ELSE sblock .)
    WHILE           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    BREAK           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    CONTINUE        reduce using rule 41 (stmt_elif -> ELSE sblock .)
    RETURN          reduce using rule 41 (stmt_elif -> ELSE sblock .)
    RAISE           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    TRY             reduce using rule 41 (stmt_elif -> ELSE sblock .)
    IDENT           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    TRUE            reduce using rule 41 (stmt_elif -> ELSE sblock .)
    FALSE           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    NUMBER          reduce using rule 41 (stmt_elif -> ELSE sblock .)
    DASH            reduce using rule 41 (stmt_elif -> ELSE sblock .)
    TILD            reduce using rule 41 (stmt_elif -> ELSE sblock .)
    BANG            reduce using rule 41 (stmt_elif -> ELSE sblock .)
    LPAREN          reduce using rule 41 (stmt_elif -> ELSE sblock .)
    PRINT           reduce using rule 41 (stmt_elif -> ELSE sblock .)
    LBRACE          reduce using rule 41 (stmt_elif -> ELSE sblock .)


state 154

    (42) stmt_elif -> ELSE IF . LPAREN expr RPAREN sblock stmt_elif

    LPAREN          shift and go to state 155


state 155

    (42) stmt_elif -> ELSE IF LPAREN . expr RPAREN sblock stmt_elif
    (4) expr -> . name
    (5) expr -> . TRUE
    (6) expr -> . FALSE
    (7) expr -> . NUMBER
    (8) expr -> . DASH expr
    (9) expr -> . TILD expr
    (10) expr -> . BANG expr
    (11) expr -> . expr PLUS expr
    (12) expr -> . expr DASH expr
    (13) expr -> . expr STAR expr
    (14) expr -> . expr SLASH expr
    (15) expr -> . expr PCENT expr
    (16) expr -> . expr AMP expr
    (17) expr -> . expr PIPE expr
    (18) expr -> . expr HAT expr
    (19) expr -> . expr LTLT expr
    (20) expr -> . expr GTGT expr
    (21) expr -> . expr AMPAMP expr
    (22) expr -> . expr PIPEPIPE expr
    (23) expr -> . expr EQEQ expr
    (24) expr -> . expr BANGEQ expr
    (25) expr -> . expr LT expr
    (26) expr -> . expr LTEQ expr
    (27) expr -> . expr GT expr
    (28) expr -> . expr GTEQ expr
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . name LPAREN exprs_comma RPAREN
    (31) expr -> . PRINT LPAREN expr RPAREN
    (1) name -> . IDENT

    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    NUMBER          shift and go to state 24
    DASH            shift and go to state 25
    TILD            shift and go to state 26
    BANG            shift and go to state 27
    LPAREN          shift and go to state 28
    PRINT           shift and go to state 29
    IDENT           shift and go to state 10

    expr                           shift and go to state 156
    name                           shift and go to state 20

state 156

    (42) stmt_elif -> ELSE IF LPAREN expr . RPAREN sblock stmt_elif
    (11) expr -> expr . PLUS expr
    (12) expr -> expr . DASH expr
    (13) expr -> expr . STAR expr
    (14) expr -> expr . SLASH expr
    (15) expr -> expr . PCENT expr
    (16) expr -> expr . AMP expr
    (17) expr -> expr . PIPE expr
    (18) expr -> expr . HAT expr
    (19) expr -> expr . LTLT expr
    (20) expr -> expr . GTGT expr
    (21) expr -> expr . AMPAMP expr
    (22) expr -> expr . PIPEPIPE expr
    (23) expr -> expr . EQEQ expr
    (24) expr -> expr . BANGEQ expr
    (25) expr -> expr . LT expr
    (26) expr -> expr . LTEQ expr
    (27) expr -> expr . GT expr
    (28) expr -> expr . GTEQ expr

    RPAREN          shift and go to state 157
    PLUS            shift and go to state 35
    DASH            shift and go to state 36
    STAR            shift and go to state 37
    SLASH           shift and go to state 38
    PCENT           shift and go to state 39
    AMP             shift and go to state 40
    PIPE            shift and go to state 41
    HAT             shift and go to state 42
    LTLT            shift and go to state 43
    GTGT            shift and go to state 44
    AMPAMP          shift and go to state 45
    PIPEPIPE        shift and go to state 46
    EQEQ            shift and go to state 47
    BANGEQ          shift and go to state 48
    LT              shift and go to state 49
    LTEQ            shift and go to state 50
    GT              shift and go to state 51
    GTEQ            shift and go to state 52


state 157

    (42) stmt_elif -> ELSE IF LPAREN expr RPAREN . sblock stmt_elif
    (52) sblock -> . LBRACE stmts RBRACE

    LBRACE          shift and go to state 96

    sblock                         shift and go to state 158

state 158

    (42) stmt_elif -> ELSE IF LPAREN expr RPAREN sblock . stmt_elif
    (40) stmt_elif -> .
    (41) stmt_elif -> . ELSE sblock
    (42) stmt_elif -> . ELSE IF LPAREN expr RPAREN sblock stmt_elif

    RBRACE          reduce using rule 40 (stmt_elif -> .)
    error           reduce using rule 40 (stmt_elif -> .)
    VAR             reduce using rule 40 (stmt_elif -> .)
    IF              reduce using rule 40 (stmt_elif -> .)
    WHILE           reduce using rule 40 (stmt_elif -> .)
    BREAK           reduce using rule 40 (stmt_elif -> .)
    CONTINUE        reduce using rule 40 (stmt_elif -> .)
    RETURN          reduce using rule 40 (stmt_elif -> .)
    RAISE           reduce using rule 40 (stmt_elif -> .)
    TRY             reduce using rule 40 (stmt_elif -> .)
    IDENT           reduce using rule 40 (stmt_elif -> .)
    TRUE            reduce using rule 40 (stmt_elif -> .)
    FALSE           reduce using rule 40 (stmt_elif -> .)
    NUMBER          reduce using rule 40 (stmt_elif -> .)
    DASH            reduce using rule 40 (stmt_elif -> .)
    TILD            reduce using rule 40 (stmt_elif -> .)
    BANG            reduce using rule 40 (stmt_elif -> .)
    LPAREN          reduce using rule 40 (stmt_elif -> .)
    PRINT           reduce using rule 40 (stmt_elif -> .)
    LBRACE          reduce using rule 40 (stmt_elif -> .)
    ELSE            shift and go to state 151

    stmt_elif                      shift and go to state 159

state 159

    (42) stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .

    RBRACE          reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    error           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    VAR             reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    IF              reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    WHILE           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    BREAK           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    CONTINUE        reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    RETURN          reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    RAISE           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    TRY             reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    IDENT           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    TRUE            reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    FALSE           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    NUMBER          reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    DASH            reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    TILD            reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    BANG            reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    LPAREN          reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    PRINT           reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)
    LBRACE          reduce using rule 42 (stmt_elif -> ELSE IF LPAREN expr RPAREN sblock stmt_elif .)

